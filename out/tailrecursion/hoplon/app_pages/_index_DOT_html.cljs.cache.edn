;; Analyzed by ClojureScript 0.0-3196
{:use-macros {with-let tailrecursion.javelin, mx2 tailrecursion.javelin, dosync tailrecursion.javelin, cell= tailrecursion.javelin, set-cell!= tailrecursion.javelin, text tailrecursion.hoplon, prop-cell tailrecursion.javelin, with-timeout tailrecursion.hoplon, cell-doseq tailrecursion.javelin, defc tailrecursion.javelin, cell-let-1 tailrecursion.javelin, defc= tailrecursion.javelin, sexp tailrecursion.hoplon, macroexpand-all tailrecursion.javelin, defelem tailrecursion.hoplon, def-values tailrecursion.hoplon, mx tailrecursion.javelin, with-page-load tailrecursion.hoplon, loop-tpl tailrecursion.hoplon, with-interval tailrecursion.hoplon, cell-let tailrecursion.javelin, with-init! tailrecursion.hoplon}, :excludes #{}, :name tailrecursion.hoplon.app-pages._index_DOT_html, :imports nil, :requires {tailrecursion.javelin tailrecursion.javelin, tailrecursion.hoplon tailrecursion.hoplon, video-poker.core video-poker.core, core video-poker.core}, :uses {form tailrecursion.hoplon, audio tailrecursion.hoplon, input tailrecursion.hoplon, hgroup tailrecursion.hoplon, do! tailrecursion.hoplon, timeout tailrecursion.hoplon, $text tailrecursion.hoplon, rely tailrecursion.hoplon, base tailrecursion.hoplon, h1 tailrecursion.hoplon, embed tailrecursion.hoplon, h3 tailrecursion.hoplon, body tailrecursion.hoplon, input? tailrecursion.javelin, keygen tailrecursion.hoplon, val-id tailrecursion.hoplon, on-append! tailrecursion.hoplon, progress tailrecursion.hoplon, main tailrecursion.hoplon, cite tailrecursion.hoplon, cell tailrecursion.javelin, on-page-load tailrecursion.hoplon, object tailrecursion.hoplon, i tailrecursion.hoplon, p tailrecursion.hoplon, nav tailrecursion.hoplon, ruby tailrecursion.hoplon, relx tailrecursion.hoplon, check-val! tailrecursion.hoplon, a tailrecursion.hoplon, menu tailrecursion.hoplon, blockquote tailrecursion.hoplon, img tailrecursion.hoplon, cell? tailrecursion.javelin, destroy-cell! tailrecursion.javelin, $comment tailrecursion.hoplon, span tailrecursion.hoplon, track tailrecursion.hoplon, seq?* tailrecursion.hoplon, data tailrecursion.hoplon, u tailrecursion.hoplon, dl tailrecursion.hoplon, select tailrecursion.hoplon, html tailrecursion.hoplon, thead tailrecursion.hoplon, del tailrecursion.hoplon, eventsource tailrecursion.hoplon, append-child tailrecursion.hoplon, fieldset tailrecursion.hoplon, rel tailrecursion.hoplon, last-rank tailrecursion.javelin, aside tailrecursion.hoplon, figure tailrecursion.hoplon, figcaption tailrecursion.hoplon, q tailrecursion.hoplon, on! tailrecursion.hoplon, bdi tailrecursion.hoplon, video tailrecursion.hoplon, address tailrecursion.hoplon, caption tailrecursion.hoplon, parse-args tailrecursion.hoplon, by-id tailrecursion.hoplon, dd tailrecursion.hoplon, rp tailrecursion.hoplon, lift tailrecursion.javelin, hr tailrecursion.hoplon, tbody tailrecursion.hoplon, table tailrecursion.hoplon, acronym tailrecursion.hoplon, frame tailrecursion.hoplon, applet tailrecursion.hoplon, html-var tailrecursion.hoplon, add-initfn! tailrecursion.hoplon, pre tailrecursion.hoplon, ul tailrecursion.hoplon, lens? tailrecursion.javelin, dir tailrecursion.hoplon, html-time tailrecursion.hoplon, set-formula! tailrecursion.javelin, add-attributes! tailrecursion.hoplon, html-map tailrecursion.hoplon, sup tailrecursion.hoplon, dfn tailrecursion.hoplon, sub tailrecursion.hoplon, mark tailrecursion.hoplon, script tailrecursion.hoplon, big tailrecursion.hoplon, button tailrecursion.hoplon, wbr tailrecursion.hoplon, strong tailrecursion.hoplon, cell-doseq* tailrecursion.javelin, li tailrecursion.hoplon, dt tailrecursion.hoplon, frameset tailrecursion.hoplon, *tx* tailrecursion.javelin, td tailrecursion.hoplon, tr tailrecursion.hoplon, deref* tailrecursion.javelin, section tailrecursion.hoplon, th tailrecursion.hoplon, optgroup tailrecursion.hoplon, rel-event tailrecursion.hoplon, iframe tailrecursion.hoplon, legend tailrecursion.hoplon, em tailrecursion.hoplon, kbd tailrecursion.hoplon, spliced tailrecursion.hoplon, article tailrecursion.hoplon, isindex tailrecursion.hoplon, abbr tailrecursion.hoplon, command tailrecursion.hoplon, set-cell! tailrecursion.javelin, lens tailrecursion.javelin, source tailrecursion.hoplon, output tailrecursion.hoplon, formula? tailrecursion.javelin, basefont tailrecursion.hoplon, route-cell tailrecursion.hoplon, header tailrecursion.hoplon, datalist tailrecursion.hoplon, tfoot tailrecursion.hoplon, s tailrecursion.hoplon, ins tailrecursion.hoplon, footer tailrecursion.hoplon, title tailrecursion.hoplon, is-ie8 tailrecursion.hoplon, h5 tailrecursion.hoplon, canvas tailrecursion.hoplon, param tailrecursion.hoplon, font tailrecursion.hoplon, div tailrecursion.hoplon, option tailrecursion.hoplon, summary tailrecursion.hoplon, samp tailrecursion.hoplon, center tailrecursion.hoplon, small tailrecursion.hoplon, style tailrecursion.hoplon, textarea tailrecursion.hoplon, loop-tpl* tailrecursion.hoplon, strike tailrecursion.hoplon, h4 tailrecursion.hoplon, tt tailrecursion.hoplon, head tailrecursion.hoplon, add-children! tailrecursion.hoplon, alts! tailrecursion.javelin, ol tailrecursion.hoplon, details tailrecursion.hoplon, col tailrecursion.hoplon, vector?* tailrecursion.hoplon, label tailrecursion.hoplon, rt tailrecursion.hoplon, when-dom tailrecursion.hoplon, h6 tailrecursion.hoplon, link tailrecursion.hoplon, page-load tailrecursion.hoplon, colgroup tailrecursion.hoplon, meter tailrecursion.hoplon, html-meta tailrecursion.hoplon, text-val! tailrecursion.hoplon, bdo tailrecursion.hoplon, dosync* tailrecursion.javelin, b tailrecursion.hoplon, code tailrecursion.hoplon, cell-map tailrecursion.javelin, node? tailrecursion.hoplon, noframes tailrecursion.hoplon, replace-children! tailrecursion.hoplon, noscript tailrecursion.hoplon, safe-nth tailrecursion.hoplon, h2 tailrecursion.hoplon, area tailrecursion.hoplon, br tailrecursion.hoplon, formula tailrecursion.javelin, unsplice tailrecursion.hoplon}, :defs {apply-to-hand {:protocol-inline nil, :meta {:arglists (quote ([func])), :doc "Run the given function against all cards in the hand\n  \n  Func takes three arguments:\n     - the index of the card\n     - the card code\n     - info about the card (map of url, held state)\n  ", :end-column 20, :end-line 35, :column 7, :line 35, :file "/Users/jj/.boot/cache/tmp/Users/jj/Projects/hoplon-video-poker/5u2/-5nd64l/tailrecursion/hoplon/app_pages/_index_DOT_html.cljs"}, :name tailrecursion.hoplon.app-pages._index_DOT_html/apply-to-hand, :variadic false, :file "/Users/jj/.boot/cache/tmp/Users/jj/Projects/hoplon-video-poker/5u2/-5nd64l/tailrecursion/hoplon/app_pages/_index_DOT_html.cljs", :end-column 20, :method-params ([func]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 1, :fn-var true, :arglists (quote ([func])), :doc "Run the given function against all cards in the hand\n  \n  Func takes three arguments:\n     - the index of the card\n     - the card code\n     - info about the card (map of url, held state)\n  ", :test true}, record-score {:protocol-inline nil, :meta {:arglists (quote ([])), :doc "Add the score from the current hand to the total", :end-column 19, :end-line 29, :column 7, :line 29, :file "/Users/jj/.boot/cache/tmp/Users/jj/Projects/hoplon-video-poker/5u2/-5nd64l/tailrecursion/hoplon/app_pages/_index_DOT_html.cljs"}, :name tailrecursion.hoplon.app-pages._index_DOT_html/record-score, :variadic false, :file "/Users/jj/.boot/cache/tmp/Users/jj/Projects/hoplon-video-poker/5u2/-5nd64l/tailrecursion/hoplon/app_pages/_index_DOT_html.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Add the score from the current hand to the total", :test true}, what-do-i-have {:meta {:end-column 22, :end-line 13, :column 8, :line 13, :file "/Users/jj/.boot/cache/tmp/Users/jj/Projects/hoplon-video-poker/5u2/-5nd64l/tailrecursion/hoplon/app_pages/_index_DOT_html.cljs"}, :file "/Users/jj/.boot/cache/tmp/Users/jj/Projects/hoplon-video-poker/5u2/-5nd64l/tailrecursion/hoplon/app_pages/_index_DOT_html.cljs", :line 13, :column 1, :end-line 13, :end-column 22, :test true, :name tailrecursion.hoplon.app-pages._index_DOT_html/what-do-i-have}, muck {:protocol-inline nil, :meta {:arglists (quote ([])), :doc "Discard the entire hand, reset the deck, re-deal, clear holds", :end-column 11, :end-line 31, :column 7, :line 31, :file "/Users/jj/.boot/cache/tmp/Users/jj/Projects/hoplon-video-poker/5u2/-5nd64l/tailrecursion/hoplon/app_pages/_index_DOT_html.cljs"}, :name tailrecursion.hoplon.app-pages._index_DOT_html/muck, :variadic false, :file "/Users/jj/.boot/cache/tmp/Users/jj/Projects/hoplon-video-poker/5u2/-5nd64l/tailrecursion/hoplon/app_pages/_index_DOT_html.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Discard the entire hand, reset the deck, re-deal, clear holds", :test true}, current-hand {:meta {:end-column 19, :end-line 5, :column 7, :line 5, :file "/Users/jj/.boot/cache/tmp/Users/jj/Projects/hoplon-video-poker/5u2/-5nd64l/tailrecursion/hoplon/app_pages/_index_DOT_html.cljs"}, :file "/Users/jj/.boot/cache/tmp/Users/jj/Projects/hoplon-video-poker/5u2/-5nd64l/tailrecursion/hoplon/app_pages/_index_DOT_html.cljs", :line 5, :column 1, :end-line 5, :end-column 19, :test true, :name tailrecursion.hoplon.app-pages._index_DOT_html/current-hand}, toggle-hold {:protocol-inline nil, :meta {:arglists (quote ([idx])), :doc "Hold/Unhold a card, but only when the user is allowed to\n   do so (they get two chances)", :end-column 18, :end-line 37, :column 7, :line 37, :file "/Users/jj/.boot/cache/tmp/Users/jj/Projects/hoplon-video-poker/5u2/-5nd64l/tailrecursion/hoplon/app_pages/_index_DOT_html.cljs"}, :name tailrecursion.hoplon.app-pages._index_DOT_html/toggle-hold, :variadic false, :file "/Users/jj/.boot/cache/tmp/Users/jj/Projects/hoplon-video-poker/5u2/-5nd64l/tailrecursion/hoplon/app_pages/_index_DOT_html.cljs", :end-column 18, :method-params ([idx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 1, :fn-var true, :arglists (quote ([idx])), :doc "Hold/Unhold a card, but only when the user is allowed to\n   do so (they get two chances)", :test true}, new-card {:protocol-inline nil, :meta {:arglists (quote ([idx])), :doc "Discard the card at the given index, and replace it with a new one", :end-column 15, :end-line 39, :column 7, :line 39, :file "/Users/jj/.boot/cache/tmp/Users/jj/Projects/hoplon-video-poker/5u2/-5nd64l/tailrecursion/hoplon/app_pages/_index_DOT_html.cljs"}, :name tailrecursion.hoplon.app-pages._index_DOT_html/new-card, :variadic false, :file "/Users/jj/.boot/cache/tmp/Users/jj/Projects/hoplon-video-poker/5u2/-5nd64l/tailrecursion/hoplon/app_pages/_index_DOT_html.cljs", :end-column 15, :method-params ([idx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 1, :fn-var true, :arglists (quote ([idx])), :doc "Discard the card at the given index, and replace it with a new one", :test true}, lock-holds {:meta {:end-column 18, :end-line 27, :column 8, :line 27, :file "/Users/jj/.boot/cache/tmp/Users/jj/Projects/hoplon-video-poker/5u2/-5nd64l/tailrecursion/hoplon/app_pages/_index_DOT_html.cljs"}, :file "/Users/jj/.boot/cache/tmp/Users/jj/Projects/hoplon-video-poker/5u2/-5nd64l/tailrecursion/hoplon/app_pages/_index_DOT_html.cljs", :line 27, :column 1, :end-line 27, :end-column 18, :test true, :name tailrecursion.hoplon.app-pages._index_DOT_html/lock-holds}, current-hand-index {:meta {:end-column 26, :end-line 9, :column 8, :line 9, :file "/Users/jj/.boot/cache/tmp/Users/jj/Projects/hoplon-video-poker/5u2/-5nd64l/tailrecursion/hoplon/app_pages/_index_DOT_html.cljs"}, :file "/Users/jj/.boot/cache/tmp/Users/jj/Projects/hoplon-video-poker/5u2/-5nd64l/tailrecursion/hoplon/app_pages/_index_DOT_html.cljs", :line 9, :column 1, :end-line 9, :end-column 26, :test true, :name tailrecursion.hoplon.app-pages._index_DOT_html/current-hand-index}, deal-count {:meta {:end-column 17, :end-line 3, :column 7, :line 3, :file "/Users/jj/.boot/cache/tmp/Users/jj/Projects/hoplon-video-poker/5u2/-5nd64l/tailrecursion/hoplon/app_pages/_index_DOT_html.cljs"}, :file "/Users/jj/.boot/cache/tmp/Users/jj/Projects/hoplon-video-poker/5u2/-5nd64l/tailrecursion/hoplon/app_pages/_index_DOT_html.cljs", :line 3, :column 1, :end-line 3, :end-column 17, :test true, :name tailrecursion.hoplon.app-pages._index_DOT_html/deal-count}, clear-hold-cards {:protocol-inline nil, :meta {:arglists (quote ([])), :doc "Clear the hold state on all cards", :end-column 23, :end-line 43, :column 7, :line 43, :file "/Users/jj/.boot/cache/tmp/Users/jj/Projects/hoplon-video-poker/5u2/-5nd64l/tailrecursion/hoplon/app_pages/_index_DOT_html.cljs"}, :name tailrecursion.hoplon.app-pages._index_DOT_html/clear-hold-cards, :variadic false, :file "/Users/jj/.boot/cache/tmp/Users/jj/Projects/hoplon-video-poker/5u2/-5nd64l/tailrecursion/hoplon/app_pages/_index_DOT_html.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Clear the hold state on all cards", :test true}, new-cards {:protocol-inline nil, :meta {:arglists (quote ([])), :doc "Discard the unheld cards, get new ones from the deck", :end-column 16, :end-line 45, :column 7, :line 45, :file "/Users/jj/.boot/cache/tmp/Users/jj/Projects/hoplon-video-poker/5u2/-5nd64l/tailrecursion/hoplon/app_pages/_index_DOT_html.cljs"}, :name tailrecursion.hoplon.app-pages._index_DOT_html/new-cards, :variadic false, :file "/Users/jj/.boot/cache/tmp/Users/jj/Projects/hoplon-video-poker/5u2/-5nd64l/tailrecursion/hoplon/app_pages/_index_DOT_html.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Discard the unheld cards, get new ones from the deck", :test true}, scored-cards {:meta {:end-column 20, :end-line 17, :column 8, :line 17, :file "/Users/jj/.boot/cache/tmp/Users/jj/Projects/hoplon-video-poker/5u2/-5nd64l/tailrecursion/hoplon/app_pages/_index_DOT_html.cljs"}, :file "/Users/jj/.boot/cache/tmp/Users/jj/Projects/hoplon-video-poker/5u2/-5nd64l/tailrecursion/hoplon/app_pages/_index_DOT_html.cljs", :line 17, :column 1, :end-line 17, :end-column 20, :test true, :name tailrecursion.hoplon.app-pages._index_DOT_html/scored-cards}, current-info {:meta {:end-column 20, :end-line 7, :column 8, :line 7, :file "/Users/jj/.boot/cache/tmp/Users/jj/Projects/hoplon-video-poker/5u2/-5nd64l/tailrecursion/hoplon/app_pages/_index_DOT_html.cljs"}, :file "/Users/jj/.boot/cache/tmp/Users/jj/Projects/hoplon-video-poker/5u2/-5nd64l/tailrecursion/hoplon/app_pages/_index_DOT_html.cljs", :line 7, :column 1, :end-line 7, :end-column 20, :test true, :name tailrecursion.hoplon.app-pages._index_DOT_html/current-info}, deal-label {:meta {:end-column 18, :end-line 25, :column 8, :line 25, :file "/Users/jj/.boot/cache/tmp/Users/jj/Projects/hoplon-video-poker/5u2/-5nd64l/tailrecursion/hoplon/app_pages/_index_DOT_html.cljs"}, :file "/Users/jj/.boot/cache/tmp/Users/jj/Projects/hoplon-video-poker/5u2/-5nd64l/tailrecursion/hoplon/app_pages/_index_DOT_html.cljs", :line 25, :column 1, :end-line 25, :end-column 18, :test true, :name tailrecursion.hoplon.app-pages._index_DOT_html/deal-label}, game-state {:meta {:end-column 18, :end-line 23, :column 8, :line 23, :file "/Users/jj/.boot/cache/tmp/Users/jj/Projects/hoplon-video-poker/5u2/-5nd64l/tailrecursion/hoplon/app_pages/_index_DOT_html.cljs"}, :file "/Users/jj/.boot/cache/tmp/Users/jj/Projects/hoplon-video-poker/5u2/-5nd64l/tailrecursion/hoplon/app_pages/_index_DOT_html.cljs", :line 23, :column 1, :end-line 23, :end-column 18, :test true, :name tailrecursion.hoplon.app-pages._index_DOT_html/game-state}, total {:meta {:end-column 12, :end-line 19, :column 7, :line 19, :file "/Users/jj/.boot/cache/tmp/Users/jj/Projects/hoplon-video-poker/5u2/-5nd64l/tailrecursion/hoplon/app_pages/_index_DOT_html.cljs"}, :file "/Users/jj/.boot/cache/tmp/Users/jj/Projects/hoplon-video-poker/5u2/-5nd64l/tailrecursion/hoplon/app_pages/_index_DOT_html.cljs", :line 19, :column 1, :end-line 19, :end-column 12, :test true, :name tailrecursion.hoplon.app-pages._index_DOT_html/total}, replace-hold-cards {:protocol-inline nil, :meta {:arglists (quote ([])), :doc "Replace all of the held cards with new ones", :end-column 25, :end-line 41, :column 7, :line 41, :file "/Users/jj/.boot/cache/tmp/Users/jj/Projects/hoplon-video-poker/5u2/-5nd64l/tailrecursion/hoplon/app_pages/_index_DOT_html.cljs"}, :name tailrecursion.hoplon.app-pages._index_DOT_html/replace-hold-cards, :variadic false, :file "/Users/jj/.boot/cache/tmp/Users/jj/Projects/hoplon-video-poker/5u2/-5nd64l/tailrecursion/hoplon/app_pages/_index_DOT_html.cljs", :end-column 25, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Replace all of the held cards with new ones", :test true}, score {:meta {:end-column 13, :end-line 15, :column 8, :line 15, :file "/Users/jj/.boot/cache/tmp/Users/jj/Projects/hoplon-video-poker/5u2/-5nd64l/tailrecursion/hoplon/app_pages/_index_DOT_html.cljs"}, :file "/Users/jj/.boot/cache/tmp/Users/jj/Projects/hoplon-video-poker/5u2/-5nd64l/tailrecursion/hoplon/app_pages/_index_DOT_html.cljs", :line 15, :column 1, :end-line 15, :end-column 13, :test true, :name tailrecursion.hoplon.app-pages._index_DOT_html/score}, hold-state {:protocol-inline nil, :meta {:arglists (quote ([idx state])), :doc "Set the hold state on a card", :end-column 17, :end-line 33, :column 7, :line 33, :file "/Users/jj/.boot/cache/tmp/Users/jj/Projects/hoplon-video-poker/5u2/-5nd64l/tailrecursion/hoplon/app_pages/_index_DOT_html.cljs"}, :name tailrecursion.hoplon.app-pages._index_DOT_html/hold-state, :variadic false, :file "/Users/jj/.boot/cache/tmp/Users/jj/Projects/hoplon-video-poker/5u2/-5nd64l/tailrecursion/hoplon/app_pages/_index_DOT_html.cljs", :end-column 17, :method-params ([idx state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 2, :fn-var true, :arglists (quote ([idx state])), :doc "Set the hold state on a card", :test true}, held-cards {:meta {:end-column 18, :end-line 21, :column 8, :line 21, :file "/Users/jj/.boot/cache/tmp/Users/jj/Projects/hoplon-video-poker/5u2/-5nd64l/tailrecursion/hoplon/app_pages/_index_DOT_html.cljs"}, :file "/Users/jj/.boot/cache/tmp/Users/jj/Projects/hoplon-video-poker/5u2/-5nd64l/tailrecursion/hoplon/app_pages/_index_DOT_html.cljs", :line 21, :column 1, :end-line 21, :end-column 18, :test true, :name tailrecursion.hoplon.app-pages._index_DOT_html/held-cards}}, :require-macros {tailrecursion.javelin tailrecursion.javelin, tailrecursion.hoplon tailrecursion.hoplon}, :cljs.analyzer/constants {:order [:held :first-deal :second-deal :game-over :rel :href :type :text :class :click :do-class :part-of-hand :src :url :selected], :seen #{:rel :selected :held :type :src :part-of-hand :click :first-deal :class :url :game-over :second-deal :do-class :href :text}}, :doc nil}